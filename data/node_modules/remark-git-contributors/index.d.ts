/**
 * Plugin to generate a list of Git contributors.
 *
 * @type {import('unified').Plugin<[(string|Options)?]|void[], Root>}
 * @returns {(node: Root, file: VFile) => Promise<void>}
 */
export default function remarkGitContributors(
  options?: string | void | Options | undefined
): (node: Root, file: VFile) => Promise<void>
export type Root = import('mdast').Root
export type VFile = import('vfile').VFile
export type Contributor = import('remark-contributors').Contributor
export type ContributorObject = import('remark-contributors').ContributorObject
/**
 * Configuration.
 */
export type Options = {
  /**
   * List of contributors to inject.
   * Defaults to the `contributors` field in the closest `package.json` upwards
   * from the processed file, if there is one.
   * Supports the string form (`name <email> (url)`) as well.
   * Fails if no contributors are found or given.
   */
  contributors?:
    | string
    | import('remark-contributors').Contributor[]
    | undefined
  /**
   * Inject the section if there is none.
   */
  appendIfMissing?: boolean | undefined
  /**
   * Working directory from which to resolve a `contributors` module, if any.
   */
  cwd?: string | undefined
  /**
   * Limit the rendered contributors.
   * A limit of `0` (or lower) includes all contributors.
   * If `limit` is given, only the top `<limit>` contributors, sorted by commit
   * count, are rendered.
   */
  limit?: number | undefined
}
