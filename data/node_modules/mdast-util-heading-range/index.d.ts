/**
 * Search `node` with `options` and invoke `callback`.
 *
 * @param {Node} node
 * @param {Test|Options} options
 * @param {Handler} handler
 */
export function headingRange(
  node: Node,
  options: Test | Options,
  handler: Handler
): void
export type Parent = import('unist').Parent
export type Node = import('mdast').Root | import('mdast').Content
export type Heading = import('mdast').Heading
export type TestFunction = (value: string, node: Heading) => boolean
export type Test = string | RegExp | TestFunction
export type Options = {
  test: Test
  ignoreFinalDefinitions?: boolean | undefined
}
export type ZoneInfo = {
  start: number
  end: number
  parent: Parent | null
}
export type Handler = (
  start: Heading | undefined,
  between: Array<Node>,
  end: Node | undefined,
  info: ZoneInfo
) => any
